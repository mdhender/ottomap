// Code generated by sqlc. DO NOT EDIT.
// versions:
//   sqlc v1.26.0
// source: roles.sql

package sqlc

import (
	"context"
)

const createRole = `-- name: CreateRole :exec
INSERT INTO roles(rlid)
VALUES (?)
`

func (q *Queries) CreateRole(ctx context.Context, rlid string) error {
	_, err := q.db.ExecContext(ctx, createRole, rlid)
	return err
}

const readAllRoles = `-- name: ReadAllRoles :many
SELECT rlid
FROM roles
`

func (q *Queries) ReadAllRoles(ctx context.Context) ([]string, error) {
	rows, err := q.db.QueryContext(ctx, readAllRoles)
	if err != nil {
		return nil, err
	}
	defer rows.Close()
	var items []string
	for rows.Next() {
		var rlid string
		if err := rows.Scan(&rlid); err != nil {
			return nil, err
		}
		items = append(items, rlid)
	}
	if err := rows.Close(); err != nil {
		return nil, err
	}
	if err := rows.Err(); err != nil {
		return nil, err
	}
	return items, nil
}
