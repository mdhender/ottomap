{
// Package status implements a Pigeon parser for turn report status lines.
package status

import (
    "bytes"
    "github.com/mdhender/ottomap/domain"
    "strings"
)

type Status struct {
    UnitId string
    Found  []any
}

//type Found struct {
//  Location   string
//  Terrain    domain.Terrain
//	Edges      []*Edge
//	Units      []string
//	Settlement string
//}

type Edge struct {
    Direction domain.Direction
    Edge      domain.EdgeType
    Terrain   domain.Terrain
}

type Coordinates struct {
    Grid   string
    Column string
    Row    string
    Raw    string
}

}

StatusLine <- u:UNIT_ID _ "Status:" _ ofli:(f:Found fli:(_ "," f:Found)*)? EOL {
    log.Printf("status: u    %T\n", u)
    log.Printf("status: ofli %T\n", ofli)
    return string(c.text), nil
}

Found <- t:TERRAIN {
    return t.(domain.Terrain), nil
} / u:UNIT_ID {
    return string(c.text), nil
}

DIRECTION <- "NE" {
    return directions.DNorthEast, nil
} / "SE" {
    return directions.DSouthEast, nil
} / "SW" {
    return directions.DSouthWest, nil
} / "NW" {
    return directions.DNorthWest, nil
} / "N" {
    return directions.DNorth, nil
} / "S" {
    return directions.DSouth, nil
}

TERRAIN <- ("CONIFER HILLS" / "CH" ) {
    return domain.TConiferHills, nil
} / ("GRASSY HILLS" / "GH" ) {
    return domain.TGrassyHills, nil
} / ("PRAIRIE" / "PR") {
    return domain.TPrairie, nil
} / ("ROCKY HILLS" / "RH") {
    return domain.TRockyHills, nil
} / ("SWAMP" / "SW") {
    return domain.TSwamp, nil
} / ("LAKE" / "L") {
    return domain.TLake, nil
} / ("OCEAN" / "O") {
    return domain.TOcean, nil
}

UNIT_ID <- DIGIT DIGIT DIGIT DIGIT ([cefg] DIGIT)? {
    return string(c.text), nil
}

EOF <- !.
DIGIT = [0-9]
SP = " "
_ = [ \t]*